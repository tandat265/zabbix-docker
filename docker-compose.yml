version: '3'

services:
  mysql:
    image: mysql:9.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: zabbix
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: zabbix
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    command: --log-bin-trust-function-creators=1 --character-set-server=utf8 --collation-server=utf8_bin
    networks:
      - zabbix-net
    restart: unless-stopped

  zabbix-server:
    image: zabbix/zabbix-server-mysql:latest
    container_name: zabbix-server
    environment:
      DB_SERVER_HOST: mysql
      MYSQL_DATABASE: zabbix
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: zabbix
      MYSQL_ROOT_PASSWORD: root
      ZBX_SERVER_HOST: zabbix-server
    depends_on:
      - mysql
    ports:
      - "10051:10051"

    networks:
      - zabbix-net
    restart: unless-stopped


  zabbix-frontend:
    image: zabbix/zabbix-web-apache-mysql:latest
    container_name: zabbix-frontend
    environment:
      DB_SERVER_HOST: mysql
      MYSQL_DATABASE: zabbix
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: zabbix
      MYSQL_ROOT_PASSWORD: root
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: Asia/HoChiMinh  # Change this to your time zone
    depends_on:
      - zabbix-server
    volumes:
      - ./zabbix/apache.conf:/etc/zabbix/apache.conf
    ports:
      - "8080:8080"
    networks:
      - zabbix-net
    restart: unless-stopped
    
    
  zabbix-agent:
    container_name: zabbix-agent
    image: zabbix/zabbix-agent2:alpine-latest
    networks:
      - zabbix-net
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Cho phép Zabbix Agent theo dõi các container Docker (nếu cần)
    ports:
      - '10050:10050'
    environment:
      - ZBX_SERVER_HOST=zabbix-server
      - ZBX_HOSTNAME=zabbix-agent
    depends_on:
      - zabbix-server
      
      
  grafana:
    container_name: grafana
    image: grafana/grafana
    networks:
      - zabbix-net
    restart: always
    ports:
      - '3000:3000'
    environment: 
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
    depends_on:
      - mysql
      - zabbix-server
      
      
  elasticsearch:
    image: elasticsearch:8.15.1  # Specify your desired version
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - zabbix-net
    restart: unless-stopped


  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.1  # Specify your desired version
    container_name: filebeat
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml  # Ensure the config file exists
      - /var/lib/docker/containers:/var/lib/docker/containers:ro  # For monitoring Docker containers
      - /var/log:/var/log:ro  # For monitoring host logs
    depends_on:
      - elasticsearch
    networks:
      - zabbix-net
    restart: unless-stopped  
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - zabbix-net

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    ports:
      - "9092:9092"  # Internal Kafka port
      - "9094:9094"  # External Kafka port
    networks:
      - zabbix-net
    depends_on:
      - zookeeper
    restart: unless-stopped

networks:
  zabbix-net:
    driver: bridge
